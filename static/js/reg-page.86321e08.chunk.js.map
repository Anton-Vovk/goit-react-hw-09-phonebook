{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterForm","dispatch","useDispatch","useState","name","email","password","user","setUser","handleChange","event","fieldName","currentTarget","dataset","fieldValue","prev","onSubmit","preventDefault","register","className","styles","form","registrationLabel","inputTitle","registrationInput","type","onChange","data-name","registrationButton","RegisterPage"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,kBAAoB,wCAAwC,kBAAoB,wCAAwC,mBAAqB,2C,2JCmEhOC,MA/Df,WACE,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAe,SAAAC,GACnB,IAAMC,EAAYD,EAAME,cAAcC,QAAQT,KACxCU,EAAaJ,EAAME,cAAcnB,MACvCe,GAAQ,SAAAO,GAAI,kCAAUA,GAAV,kBAAiBJ,EAAYG,QAQ3C,OACE,mCACE,uBAAME,SAPW,SAAAN,GACnBA,EAAMO,iBACNhB,EAASiB,YAASX,KAKcY,UAAWC,IAAOC,KAAhD,UACE,wBAAOF,UAAWC,IAAOE,kBAAzB,UACE,sBAAMH,UAAWC,IAAOG,WAAxB,kBACA,uBACEJ,UAAWC,IAAOI,kBAClBC,KAAK,OACLrB,KAAK,OACLX,MAAOc,EAAKH,KACZsB,SAAUjB,EACVkB,YAAU,YAGd,wBAAOR,UAAWC,IAAOE,kBAAzB,UACE,sBAAMH,UAAWC,IAAOG,WAAxB,mBACA,uBACEJ,UAAWC,IAAOI,kBAClBC,KAAK,QACLrB,KAAK,QACLX,MAAOc,EAAKF,MACZqB,SAAUjB,EACVkB,YAAU,aAGd,wBAAOR,UAAWC,IAAOE,kBAAzB,UACE,sBAAMH,UAAWC,IAAOG,WAAxB,sBACA,uBACEJ,UAAWC,IAAOI,kBAClBC,KAAK,WACLrB,KAAK,WACLX,MAAOc,EAAKD,SACZoB,SAAUjB,EACVkB,YAAU,gBAGd,wBAAQR,UAAWC,IAAOQ,mBAAoBH,KAAK,SAAnD,4BCjDOI,EARM,WACnB,OACE,mCACE,cAAC,EAAD","file":"static/js/reg-page.86321e08.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__21ht9\",\"inputTitle\":\"RegisterForm_inputTitle__191xm\",\"registrationLabel\":\"RegisterForm_registrationLabel__1sLE4\",\"registrationInput\":\"RegisterForm_registrationInput__3S261\",\"registrationButton\":\"RegisterForm_registrationButton__NBjoT\"};","import React, { useState } from 'react';\r\nimport { register } from '../../redux/auth/auth-operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport styles from './RegisterForm.module.css';\r\n\r\nfunction RegisterForm() {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    const fieldName = event.currentTarget.dataset.name;\r\n    const fieldValue = event.currentTarget.value;\r\n    setUser(prev => ({ ...prev, [fieldName]: fieldValue }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    dispatch(register(user));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={styles.form}>\r\n        <label className={styles.registrationLabel}>\r\n          <span className={styles.inputTitle}>Name</span>\r\n          <input\r\n            className={styles.registrationInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={user.name}\r\n            onChange={handleChange}\r\n            data-name=\"name\"\r\n          ></input>\r\n        </label>\r\n        <label className={styles.registrationLabel}>\r\n          <span className={styles.inputTitle}>Email</span>\r\n          <input\r\n            className={styles.registrationInput}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n            data-name=\"email\"\r\n          ></input>\r\n        </label>\r\n        <label className={styles.registrationLabel}>\r\n          <span className={styles.inputTitle}>Password</span>\r\n          <input\r\n            className={styles.registrationInput}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n            data-name=\"password\"\r\n          ></input>\r\n        </label>\r\n        <button className={styles.registrationButton} type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport RegisterForm from '../../components/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <>\r\n      <RegisterForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"sourceRoot":""}